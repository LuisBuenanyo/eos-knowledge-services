#!/bin/bash

export GI_TYPELIB_PATH="%ekltypelibdir%${GI_TYPELIB_PATH:+:$GI_TYPELIB_PATH}"
export LD_LIBRARY_PATH="%eklpkglibdir%${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"

if [ "$GJS_DEBUG_OUTPUT" == "" ]; then
    export GJS_DEBUG_OUTPUT=stderr
fi

if [ "$GJS_DEBUG_TOPICS" == "" ]; then
    export GJS_DEBUG_TOPICS="JS ERROR;JS LOG"
fi

DEBUG_COMMAND=""
if [ "$RUN_DEBUG" != "" ]; then
    DEBUG_COMMAND="gdb --args"
fi

SCRIPT="const Gio = imports.gi.Gio;
Gio.Resource.load('%eklpkgdatadir%/eos-knowledge.gresource')._register();
imports.searchPath.unshift('resource:///com/endlessm/knowledge/js');

Gio.Resource.load('%pkgdatadir%/eks-search-provider-v1.gresource')._register();
imports.searchPath.unshift('resource:///com/endlessm/knowledge-services/search-provider-v1');

const SearchProviderV1 = imports.searchProviderV1;
let application = new SearchProviderV1.Application();
application.run(['$0'].concat(ARGV));"

exec $DEBUG_COMMAND gjs -c "$SCRIPT" "$@"
